"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/map/page",{

/***/ "(app-pages-browser)/./src/app/ui/dashboard/map/Polygon.tsx":
/*!**********************************************!*\
  !*** ./src/app/ui/dashboard/map/Polygon.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Polygon: function() { return /* binding */ Polygon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _vis_gl_react_google_maps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vis.gl/react-google-maps */ \"(app-pages-browser)/./node_modules/@vis.gl/react-google-maps/dist/index.modern.mjs\");\n/* eslint-disable complexity */ var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nfunction usePolygon(props) {\n    var _useContext;\n    _s();\n    const { onClick, onDrag, onDragStart, onDragEnd, onMouseOver, onMouseOut, encodedPaths, ...polygonOptions } = props;\n    // This is here to avoid triggering the useEffect below when the callbacks change (which happen if the user didn't memoize them)\n    const callbacks = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n    Object.assign(callbacks.current, {\n        onClick,\n        onDrag,\n        onDragStart,\n        onDragEnd,\n        onMouseOver,\n        onMouseOut,\n        onInsertAt,\n        onRemoveAt,\n        onSetAt\n    });\n    const geometryLibrary = (0,_vis_gl_react_google_maps__WEBPACK_IMPORTED_MODULE_1__.useMapsLibrary)(\"geometry\");\n    const polygon = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new google.maps.Polygon()).current;\n    // update PolygonOptions (note the dependencies aren't properly checked\n    // here, we just assume that setOptions is smart enough to not waste a\n    // lot of time updating values that didn't change)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        polygon.setOptions(polygonOptions);\n    }, [\n        polygon,\n        polygonOptions\n    ]);\n    const map = (_useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_vis_gl_react_google_maps__WEBPACK_IMPORTED_MODULE_1__.GoogleMapsContext)) === null || _useContext === void 0 ? void 0 : _useContext.map;\n    // update the path with the encodedPath\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!encodedPaths || !geometryLibrary) return;\n        const paths = encodedPaths.map((path)=>{\n            geometryLibrary.encoding.decodePath(path);\n        });\n        console.log(\"paths\", paths);\n        polygon.setPaths(paths);\n    }, [\n        polygon,\n        encodedPaths,\n        geometryLibrary\n    ]);\n    // create polygon instance and add to the map once the map is available\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!map) {\n            if (map === undefined) console.error(\"<Polygon> has to be inside a Map component.\");\n            return;\n        }\n        polygon.setMap(map);\n        return ()=>{\n            polygon.setMap(null);\n        };\n    }, [\n        map\n    ]);\n    // attach and re-attach event-handlers when any of the properties change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!polygon) return;\n        // Add event listeners\n        const gme = google.maps.event;\n        [\n            [\n                \"click\",\n                \"onClick\"\n            ],\n            [\n                \"drag\",\n                \"onDrag\"\n            ],\n            [\n                \"dragstart\",\n                \"onDragStart\"\n            ],\n            [\n                \"dragend\",\n                \"onDragEnd\"\n            ],\n            [\n                \"mouseover\",\n                \"onMouseOver\"\n            ],\n            [\n                \"mouseout\",\n                \"onMouseOut\"\n            ],\n            [\n                \"insert_at\",\n                \"onInsertAt\"\n            ],\n            [\n                \"remove_at\",\n                \"onRemoveAt\"\n            ],\n            [\n                \"set_at\",\n                \"onSetAt\"\n            ]\n        ].forEach((param)=>{\n            let [eventName, eventCallback] = param;\n            gme.addListener(polygon, eventName, (e)=>{\n                const callback = callbacks.current[eventCallback];\n                if (callback) callback(e);\n            });\n        });\n        return ()=>{\n            gme.clearInstanceListeners(polygon);\n        };\n    }, [\n        polygon\n    ]);\n    return polygon;\n}\n_s(usePolygon, \"jkpe9Xt8YAGWjv5JIpEoHi+UnBg=\", false, function() {\n    return [\n        _vis_gl_react_google_maps__WEBPACK_IMPORTED_MODULE_1__.useMapsLibrary\n    ];\n});\n/**\r\n   * Component to render a Google Maps polygon on a map\r\n   */ const Polygon = /*#__PURE__*/ _s1((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c = _s1((props, ref)=>{\n    _s1();\n    const polygon = usePolygon(props);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, ()=>polygon, []);\n    return null;\n}, \"QWUCSrBMx89ht59aEXvivlYV9ck=\", false, function() {\n    return [\n        usePolygon\n    ];\n})), \"QWUCSrBMx89ht59aEXvivlYV9ck=\", false, function() {\n    return [\n        usePolygon\n    ];\n});\n_c1 = Polygon;\nvar _c, _c1;\n$RefreshReg$(_c, \"Polygon$forwardRef\");\n$RefreshReg$(_c1, \"Polygon\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ui/dashboard/map/Polygon.tsx\n"));

/***/ })

});