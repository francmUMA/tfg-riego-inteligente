"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/devices/page",{

/***/ "(app-pages-browser)/./src/app/lib/areasUtils.ts":
/*!***********************************!*\
  !*** ./src/app/lib/areasUtils.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addArea: function() { return /* binding */ addArea; },\n/* harmony export */   deleteArea: function() { return /* binding */ deleteArea; },\n/* harmony export */   getAreas: function() { return /* binding */ getAreas; },\n/* harmony export */   updateColorArea: function() { return /* binding */ updateColorArea; }\n/* harmony export */ });\nasync function getAreas(token) {\n    let options = {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token,\n            \"Content-Type\": \"application/json\"\n        }\n    };\n    let request = await fetch(\"http://192.168.1.141:3000/api\" + \"/areas\", options);\n    if (request.status === 200) {\n        return request.json();\n    } else {\n        return [];\n    }\n}\nasync function addArea(name, token) {\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            name: name,\n            color: \"5833FF\"\n        })\n    };\n    let request = await fetch(\"http://192.168.1.141:3000/api\" + \"/areas\", options);\n    if (request.status === 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\nasync function deleteArea(id, token) {\n    let options = {\n        method: \"DELETE\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token\n        }\n    };\n    let request = await fetch(\"http://192.168.1.141:3000/api\" + \"/areas/\" + id, options);\n    if (request.status === 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\nasync function updateColorArea(color, id, token) {\n    let options = {\n        method: \"PUT\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            color: color\n        })\n    };\n    let request = await fetch(\"http://192.168.1.141:3000/api\" + \"/areas/color/\" + id, options);\n    if (request.status === 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvbGliL2FyZWFzVXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU9PLGVBQWVBLFNBQVNDLEtBQWE7SUFDeEMsSUFBSUMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFNBQVM7WUFDTCxpQkFBaUIsWUFBWUg7WUFDN0IsZ0JBQWdCO1FBQ3BCO0lBQ0o7SUFDQSxJQUFJSSxVQUFVLE1BQU1DLE1BQU1DLCtCQUFzQyxHQUFHLFVBQVVMO0lBQzdFLElBQUlHLFFBQVFLLE1BQU0sS0FBSyxLQUFLO1FBQ3hCLE9BQU9MLFFBQVFNLElBQUk7SUFDdkIsT0FBTztRQUNILE9BQU8sRUFBRTtJQUNiO0FBQ0o7QUFFTyxlQUFlQyxRQUFRQyxJQUFZLEVBQUVaLEtBQWE7SUFDckQsSUFBSUMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFNBQVM7WUFDTCxpQkFBaUIsWUFBWUg7WUFDN0IsZ0JBQWdCO1FBQ3BCO1FBQ0FhLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztZQUFDSCxNQUFNQTtZQUFNSSxPQUFPO1FBQVE7SUFDckQ7SUFDQSxJQUFJWixVQUFVLE1BQU1DLE1BQU1DLCtCQUFzQyxHQUFHLFVBQVVMO0lBQzdFLElBQUlHLFFBQVFLLE1BQU0sS0FBSyxLQUFLO1FBQ3hCLE9BQU87SUFDWCxPQUFPO1FBQ0gsT0FBTztJQUNYO0FBQ0o7QUFFTyxlQUFlUSxXQUFXQyxFQUFVLEVBQUVsQixLQUFhO0lBQ3RELElBQUlDLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxTQUFTO1lBQ0wsaUJBQWlCLFlBQVlIO1FBQ2pDO0lBQ0o7SUFDQSxJQUFJSSxVQUFVLE1BQU1DLE1BQU1DLCtCQUFzQyxHQUFHLFlBQVlZLElBQUlqQjtJQUNuRixJQUFJRyxRQUFRSyxNQUFNLEtBQUssS0FBSztRQUN4QixPQUFPO0lBQ1gsT0FBTztRQUNILE9BQU87SUFDWDtBQUNKO0FBRU8sZUFBZVUsZ0JBQWdCSCxLQUFhLEVBQUVFLEVBQVUsRUFBRWxCLEtBQWE7SUFDMUUsSUFBSUMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFNBQVM7WUFDTCxpQkFBaUIsWUFBWUg7WUFDN0IsZ0JBQWdCO1FBQ3BCO1FBQ0FhLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztZQUFDQyxPQUFPQTtRQUFLO0lBQ3RDO0lBQ0EsSUFBSVosVUFBVSxNQUFNQyxNQUFNQywrQkFBc0MsR0FBRyxrQkFBa0JZLElBQUlqQjtJQUN6RixJQUFJRyxRQUFRSyxNQUFNLEtBQUssS0FBSztRQUN4QixPQUFPO0lBQ1gsT0FBTztRQUNILE9BQU87SUFDWDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvbGliL2FyZWFzVXRpbHMudHM/MzY5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEFyZWEge1xyXG4gICAgaWQ6IHN0cmluZyxcclxuICAgIG5hbWU6IHN0cmluZyxcclxuICAgIHVzZXI6IHN0cmluZyxcclxuICAgIGNvbG9yOiBzdHJpbmdcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFyZWFzKHRva2VuOiBzdHJpbmcpIHtcclxuICAgIGxldCBvcHRpb25zID0ge1xyXG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHRva2VuLFxyXG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgbGV0IHJlcXVlc3QgPSBhd2FpdCBmZXRjaChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HTE9CQUxfQVBJX1VSTCArIFwiL2FyZWFzXCIsIG9wdGlvbnMpXHJcbiAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgICAgIHJldHVybiByZXF1ZXN0Lmpzb24oKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gW11cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFkZEFyZWEobmFtZTogc3RyaW5nLCB0b2tlbjogc3RyaW5nKSB7XHJcbiAgICBsZXQgb3B0aW9ucyA9IHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgdG9rZW4sXHJcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtuYW1lOiBuYW1lLCBjb2xvcjogJzU4MzNGRid9KVxyXG4gICAgfVxyXG4gICAgbGV0IHJlcXVlc3QgPSBhd2FpdCBmZXRjaChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HTE9CQUxfQVBJX1VSTCArIFwiL2FyZWFzXCIsIG9wdGlvbnMpXHJcbiAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlQXJlYShpZDogc3RyaW5nLCB0b2tlbjogc3RyaW5nKSB7XHJcbiAgICBsZXQgb3B0aW9ucyA9IHtcclxuICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyB0b2tlbixcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBsZXQgcmVxdWVzdCA9IGF3YWl0IGZldGNoKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0dMT0JBTF9BUElfVVJMICsgXCIvYXJlYXMvXCIgKyBpZCwgb3B0aW9ucylcclxuICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMjAwKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWVcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVDb2xvckFyZWEoY29sb3I6IHN0cmluZywgaWQ6IHN0cmluZywgdG9rZW46IHN0cmluZykge1xyXG4gICAgbGV0IG9wdGlvbnMgPSB7XHJcbiAgICAgICAgbWV0aG9kOiAnUFVUJyxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgdG9rZW4sXHJcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtjb2xvcjogY29sb3J9KVxyXG4gICAgfVxyXG4gICAgbGV0IHJlcXVlc3QgPSBhd2FpdCBmZXRjaChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HTE9CQUxfQVBJX1VSTCArIFwiL2FyZWFzL2NvbG9yL1wiICsgaWQsIG9wdGlvbnMpXHJcbiAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbImdldEFyZWFzIiwidG9rZW4iLCJvcHRpb25zIiwibWV0aG9kIiwiaGVhZGVycyIsInJlcXVlc3QiLCJmZXRjaCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19HTE9CQUxfQVBJX1VSTCIsInN0YXR1cyIsImpzb24iLCJhZGRBcmVhIiwibmFtZSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY29sb3IiLCJkZWxldGVBcmVhIiwiaWQiLCJ1cGRhdGVDb2xvckFyZWEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/lib/areasUtils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/lib/devicesUtils.ts":
/*!*************************************!*\
  !*** ./src/app/lib/devicesUtils.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkIP: function() { return /* binding */ checkIP; },\n/* harmony export */   createDevice: function() { return /* binding */ createDevice; },\n/* harmony export */   deleteDevice: function() { return /* binding */ deleteDevice; },\n/* harmony export */   getDeviceCpuTemperature: function() { return /* binding */ getDeviceCpuTemperature; },\n/* harmony export */   getDeviceInfo: function() { return /* binding */ getDeviceInfo; },\n/* harmony export */   getDevices: function() { return /* binding */ getDevices; },\n/* harmony export */   testDeviceConnection: function() { return /* binding */ testDeviceConnection; },\n/* harmony export */   updateDeviceArea: function() { return /* binding */ updateDeviceArea; },\n/* harmony export */   updateDeviceIp: function() { return /* binding */ updateDeviceIp; },\n/* harmony export */   updateDevicePosition: function() { return /* binding */ updateDevicePosition; }\n/* harmony export */ });\nasync function getDevices(token) {\n    let options = {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token\n        }\n    };\n    let request = await fetch(\"http://192.168.1.141:3000/api\" + \"/devices\", options);\n    if (request.status == 200) {\n        let response = await request.json();\n        return response;\n    } else {\n        return [];\n    }\n}\nfunction checkIP(ip) {\n    const patronIP = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n    if (patronIP.test(ip)) {\n        const octetos = ip.split(\".\").map(Number);\n        // Verifica que cada octeto esté en el rango adecuado (0-255)\n        if (octetos.every((octeto)=>octeto >= 0 && octeto <= 255)) {\n            return true;\n        }\n    }\n    return false;\n}\nasync function createDevice(name, ip, token) {\n    let options = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            name: name,\n            ip: ip\n        })\n    };\n    console.log(options);\n    let response = await fetch(\"http://192.168.1.141:3000/api\" + \"/devices/\", options);\n    if (response.status == 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\nasync function deleteDevice(id, token) {\n    let options = {\n        method: \"DELETE\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token\n        }\n    };\n    let response = await fetch(\"http://192.168.1.141:3000/api\" + \"/devices/\" + id, options);\n    if (response.status == 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\nasync function updateDevicePosition(id, lat, lon, token) {\n    let options = {\n        method: \"PUT\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            id: id,\n            Latitud: lat,\n            Longitud: lon\n        })\n    };\n    let response = await fetch(\"http://192.168.1.141:3000/api\" + \"/devices/position\", options);\n    if (response.status == 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\nasync function updateDeviceIp(id, ip, token) {\n    let options = {\n        method: \"PUT\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            id: id,\n            ip: ip\n        })\n    };\n    let response = await fetch(\"http://192.168.1.141:3000/api\" + \"/devices/ip\", options);\n    if (response.status == 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\nasync function testDeviceConnection(id, token) {\n    let options = {\n        method: \"PUT\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token\n        }\n    };\n    let response = await fetch(\"http://192.168.1.141:3000/api\" + \"/devices/test/\" + id, options);\n    if (response.status == 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\nasync function getDeviceInfo(id, token) {\n    let options = {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token\n        }\n    };\n    let response = await fetch(\"http://192.168.1.141:3000/api\" + \"/devices/id/\" + id, options);\n    if (response.status == 200) {\n        let data = await response.json();\n        return data;\n    } else {\n        return undefined;\n    }\n}\nasync function getDeviceCpuTemperature(id, token) {\n    let options = {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token\n        }\n    };\n    let response = await fetch(\"http://192.168.1.141:3000/api\" + \"/cpu_temp/all/\" + id, options);\n    if (response.status == 200) {\n        let data = await response.json();\n        return data;\n    } else {\n        return [];\n    }\n}\nasync function updateDeviceArea(id, area, token) {\n    let options = {\n        method: \"PUT\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            id: id,\n            area: area\n        })\n    };\n    let response = await fetch(\"http://192.168.1.141:3000/api\" + \"/devices/area\", options);\n    if (response.status == 200) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/lib/devicesUtils.ts\n"));

/***/ })

});